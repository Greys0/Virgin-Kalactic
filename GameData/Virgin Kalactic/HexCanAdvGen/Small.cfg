PART
{
	MODEL
	{
		model		=	HexCans/Models/HexCan
		texture		=	HexCan000, Virgin Kalactic/HexCanAdvGen/AdvGen
		position	=	0.0, 0.0, 0.0
		rotation	=	0.0, 0.0, 0.0
		scale		=	2.0, 2.0, 2.0
	}
	// --- general parameters ---
	name			=	HexCanAdvGen
	module			=	Part
	author			=	Greys

	// --- asset parameters ---
	scale			=	1.0
	rescaleFactor	=	0.5
	specPower		=	0.3
	rimFalloff		=	3.0
	alphaCutoff		=	0.0

	// --- general parameters ---
	node_attach			=	0.0, 0.0, -0.2,   0.0, 0.0, 1.0, 2
	node_stack_top_01	=	0.0, 0.0,  0.166, 0.0, 1.0, 0.0, 1
	node_stack_top		=	0.0, 0.75, 0.0,   0.0, 1.0, 0.0, 1
	node_stack_bottom	=	0.0,-0.75, 0.0,   0.0,-1.0, 0.0, 1

	attachRules		=	1,1,1,1,1

	// --- editor parameters ---
	cost			=	200
	category		=	Utility
	subcategory		=	0
	title			=	HexCan-Advanced Generator-Rover
	manufacturer	=	PanSpace Manufacturing Inc. Ltd. LLC. Co.
	// 				small= 0.75m, normal= 1.5m large= 3m
	description		=	A 0.75m long electrical generator that burns fuel and air. 

	// --- general parameters ---
	mass			=	0.02
	dragModelType		=	default
	maximum_drag		=	0.2
	minimum_drag		=	0.3
	angularDrag			=	2.0
	crashTolerance		=	12
	breakingForce		=	400
	breakingTorque		=	400
	maxTemp			=	2900

	// --- resource parameters ---
	// 2x the container size = 8x the volume
	
	MODULE
	{
		name = AdvGenerator
		numSamples = 75
		minThrottle = 0.002
		INPUT
		{
			resourceName	=	LiquidFuel
			maxRate			=	0.3
			rateCurve
			{ 
				// throttle percent, amount percent, tangentIn, tangentOut
				key	=	0	0.0002	0	0
				key	=	0.5	0.6		0	0
				key	=	1	1		0	0
			}
		}
		OUTPUT
		{
			resourceName = ElectricCharge
			maxRate = 15
			type = PRIMARY // PRIMARY outputs drive the throttle response, BYPRODUCT outputs are ignored
			rateCurve
			{
				// amount percent, throttle percent, tangentIn, tangentOut
				key	=	0	0	0	0
				key	=	0.5	0.3	0	0
				key	=	1	1	0	0
			}
			revRateCurve
			{
				// throttle percent, amount percent, tangentIn, tangentOut
				key	=	0	0	0	0
				key	=	0.3	0.5	0	0
				key	=	1	1	0	0
			}
		}
	}
	
	MODULE
	{
		name = ModuleCrossFeed
	}

}


